/// Returns a circular navigation
/// - Version 1.3.0
/// - Date last edited: 2016-06-02
/// @name circular
/// @group blocks
/// @author Wassim Foad, Mads Stoumann
/// @param {String} $theme [$circular]- The theme-map to use
/// @output class-module
/// @link http://www.stoumann.dk/blocks/circular.html Demo
/// @example scss
///   .circular( @include circular(); )

@mixin circular($theme: $circular) {
	$root: &;
	$angle: (360 / map-get($theme, "num-items") - 0deg);
	$off: ((8 - map-get($theme, "num-items")) * 45 / map-get($theme, "num-items"));
	
	@if map-get($theme, "arc") {
		$angle: ($angle / 2);
		$off: ((2 + map-get($theme, "num-items")) * 45 / map-get($theme, "num-items"));
	}
	
	position: relative;
	width: map-get($theme, "width");
	height: map-get($theme, "height");
	margin: 0 auto;
	
	&-icon {
		@include equal(map-get($theme, "icon-size"));
	}
	&-label {
		@include absolute(top 0 left 0);
		width: 100%;
		height: 100%;
		list-style-type: none;
		opacity: 0;
		z-index: -1;
		transition: all map-get($theme, "animation-time");
		pointer-events: none;
		& > * {	pointer-events: auto; }
		
		@for $i from 1 through map-get($theme, "num-items") {
			&:nth-of-type(#{$i}) { 
				transform: rotate3d(0, 0, 1, - $off - 90 + $i * $angle) scale3d(0, 0, 0);
				#{$root}-icon { 
					transform: rotate3d(0, 0, 1, $off - $i * $angle);
				}
			}
		}
	}
	&-toggle {
		@include absolute(top 50% left 50%);
		transform: translate3d(-50%, -50%, 0);
		z-index: map-get($theme, "z-index")+1;
		&-icon {
			@include equal(map-get($theme, "icon-size"));
			transition: all map-get($theme, "animation-time"); 
			&-background {
				fill: map-get($theme, "icon-toggle-background")
			}
			&-color {
				fill: map-get($theme, "icon-toggle-color")
			}
		}
	}
	.state:checked + &-toggle &-toggle-icon {
		transform: scale3d(.8, .8, .8) rotate3d(0, 0, 1, 225deg); 
		&-background {
            fill: map-get($theme, "icon-toggle-background-active")
		}
		&-color {
			fill: map-get($theme, "icon-toggle-color-active")
		}
	}
	.state:checked ~ #{$root}-sub #{$root}-label {
		opacity: 1;
		z-index: map-get($theme, "z-index");
		@for $i from 1 through map-get($theme, "num-items") {
			&:nth-of-type(#{$i}) { 
				transform: rotate3d(0, 0, 1, - $off + $i * $angle) scale3d(1, 1, 1);
                transition-delay: (($i - 1)/(map-get($theme, "num-items")-1)) * map-get($theme, "animation-time");
			}
		}
	}
}

/// Theme-map for circular
/// @name circular
/// @group settings

$circular: (
    "animation-time": .333333s,
	"arc": false,
	"height": 20em,
	"icon-size": 5em,
	"icon-toggle-background": #002d5a,
	"icon-toggle-background-active": #4C6B8B,
	"icon-toggle-color": #fcfcfc,
	"icon-toggle-color-active": #fcfcfc,
	"num-items": 8,
	"width": 20em,
	"z-index": 0
);