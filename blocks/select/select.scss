/// Faux-Select controleld by a checkbox and radio-buttons (for options), allows multiline-options.
/// - Version 1.2.0
/// - Date last edited: 2016-04-06
/// @name select
/// @group blocks
/// @author Mads Stoumann
/// @param {String} $theme [$select]- The theme-map to use
/// @output class-module
/// @link http://www.stoumann.dk/blocks/select.html Demo
/// @example scss
///   .select ( @include select(); )

@mixin select($theme: $select) {
	$root: &;
	@include font-sizes(map-get($theme, "font-map"));
	
	&-label {
		position: relative;
		display: block;
		width: map-get($theme, "width");
		margin-top: -1px;
		padding: map-get($theme, "label-padding");
		color: transparent;
		border: 1px solid map-get($theme, "border-color");
		border-radius: map-get($theme, "border-radius");
		background: map-get($theme, "background");
		&::after {
			@include absolute(top 50% right 0.6em);
			transform: translateY(-50%);
			font-size: 2em;
			content: map-get($theme, "toggle-expand");
			color: map-get($theme, "label-color");
		}
		&-option {
			@extend .single-line-ellipsis;
			display: inline-block;
			position: absolute; 
			left: map-get($theme, "label-option-padding-left");
			color: map-get($theme, "label-color");
			max-width: 80%;
			height: 1.5em;
		}
	}
	&-panel {
		position: relative;
		z-index: map-get($theme, "z-index")+2;
		height: auto;
		max-height: 0;
		overflow: hidden;
		width: map-get($theme, "width");
		transition: max-height 0.3s ease 0s;
	}
	&-option {
		display: block;
		max-height: map-get($theme, "option-max-height");
		padding: map-get($theme, "option-padding");
		color: map-get($theme, "option-color");
		border: 1px solid map-get($theme, "border-color");
		border-top-color: transparent;
		background: map-get($theme, "option-background");
		@include hover {
			background: map-get($theme, "option-hover-background");
			color: map-get($theme, "option-hover-color");
		}
		.state:checked + & { 
			background: map-get($theme, "option-selected-background");
			color: map-get($theme, "option-selected-color");
		}
	}
	.state:checked + &-label {
		border-bottom-left-radius: 0;
		border-bottom-right-radius: 0;
		color: map-get($theme, "label-color");
		& > #{$root}-label-option { 
			display: none; 
		}
		&::before {
			content: "";
			@include overlay(transarent, map-get($theme, "z-index")+1);	
		}
		+ #{$root}-panel { 
			max-height: 50em; 
			transition-duration: 0.7s;
		}
		&::after { 
			content: map-get($theme, "toggle-contract");
		}
	}
}

/// Theme-map for select-block
/// @name select-theme
/// @group settings

$select: (
	"background": #eee,
	"border-color": #aaa,
	"border-radius": 0.25em,
	"font-map": 0,
	"label-color": #111,
	"label-option-padding-left": 1em,
	"label-padding": 0.75em 1em,
	"option-background": white,
	"option-color": "#222",
	"option-hover-background": lightsteelblue,
	"option-hover-color": black,
	"option-max-height": auto,
	"option-padding": 0.75em 1em,
	"option-selected-background": darken(lightslategrey, 20),
	"option-selected-color": white,
	"toggle-expand": "\002B",
	"toggle-contract": "\2212",
	"width": 20em,
	"z-index": z("select")
);