/// Facets
/// - Version 1.3.3
/// - Date last edited: 2016-06-23
/// @name facets
/// @group blocks
/// @author Mads Stoumann
/// @param {String} $theme [$facets]- The theme-map to use
/// @output class-module
/// @link http://www.stoumann.dk/blocks/facets/ Demo
/// @example scss
///   .facets ( @include facets(); )

@mixin facets($theme: $facets) {
	$root: &;
	@include font-sizes(map-get($theme, "font-map"));
	@if type-of(map-get($theme, "font")) == list { @include get-font(map-get($theme, "font")...); }
	
	@include fixed(top 0 right 0 bottom 0 left 0);
	display: none;
	overflow-y: scroll;
	z-index: map-get($theme, "z-index");
	padding: map-get($theme, "facet-padding-mobile");
	background: map-get($theme, "facet-background");
	
	& > .state:checked {
		& + #{$root}-fieldset > #{$root}-label,
		& + #{$root}-label {
			z-index: map-get($theme, "z-index");
			color: map-get($theme, "label-color-selected");
			border-radius: map-get($theme, "label-border-radius-selected");
			background: map-get($theme, "label-background-selected");
			&::after { content: map-get($theme, "label-content-selected"); }
			& + #{$root}-select {
				z-index: map-get($theme, "z-index")+4;
				max-height: calc(100vh - 7.5em);
				border: map-get($theme, "select-border");
				border-top-width: 0;
			}
		}
		& + #{$root}-overlay {
			display: none;
		}
	}
	.state:checked + &-toggle + & { display: block; }
	
	&-apply { 
		@include fixed(right 0 bottom 0 left 0);
		z-index: map-get($theme, "z-index")+3;
		height: 4em;
		padding: .5em;
		text-align: center;
	}
	&-fieldset {
		position: relative;
		display: block;
		margin-bottom: .5em;
		border: 0;
	}
	&-label {
		font-family: inherit;
		font-size: 1em;
		font-weight: inherit;
		line-height: 2.6;
		position: relative;
		z-index: map-get($theme, "z-index")+2;
		display: inline-block;
		width: 100%;
		padding: map-get($theme, "label-padding");
		text-align: center;
		border: map-get($theme, "label-border");
		border-radius: map-get($theme, "label-border-radius");
		outline: none;
		background: map-get($theme, "label-background");
		&::after {
			content: map-get($theme, "label-content")
		}
		&#{$root}-apply {
			&-cancel, &-filter {
				width: 45%;
				&::after { content: "";	}
			}
			&-cancel {
				color: map-get($theme, "apply-cancel-color");
				background: map-get($theme, "apply-cancel-background");
			}
			&-filter {
				color: map-get($theme, "apply-filter-color");
				background: map-get($theme, "apply-filter-background");
			}
		}
	}
	&-overlay {
		@include overlay(map-get($theme, "overlay-color"), map-get($theme, "z-index")+1);	
	}
	&-reset {
		border: map-get($theme, "reset-border");
		color: map-get($theme, "reset-color");
		background: map-get($theme, "reset-background");
		&::after { content: ""; }
	}
	&-select {
		@include absolute();
		overflow: hidden;
		overflow-y: scroll;
		width: 100%;
		max-height: 0;
		transition: max-height 0.25s ease-in-out 0s;
		border-radius: map-get($theme, "select-border-radius");
		background: map-get($theme, "select-background");
		box-shadow: map-get($theme, "select-box-shadow");
				
		&-label {
			display: block;
			position: relative;
			padding: map-get($theme, "slabel-padding");
			color: map-get($theme, "slabel-color");
			background: map-get($theme, "slabel-background");
			text-indent: 1.5em;
			&::before {
				@include absolute(top .6em left .5em);
				@include equal(1em);
				display: inline-block;
				content: "";
				text-indent: 0;
				border: map-get($theme, "label-border");
				background:  map-get($theme, "slabel-background-before");
			}	
			.state:checked + & {
				color: map-get($theme, "slabel-color-selected");
				background: map-get($theme, "slabel-background-selected");
				&::before {display: none;}
				&::after {
					@include absolute(top .25em left .6em);
					display: inline-block;
					content: "\2715";
					text-indent: 0;
				}
			}
			&:last-of-type {
				border-radius: map-get($theme, "select-border-radius");
			}
		}
	}
	&.facet-tags {
		position: static;
		display: block;
		overflow-y: initial;
		padding: map-get($theme, "facet-tags-padding");
		border: map-get($theme, "facet-border");
		border-radius: map-get($theme, "facet-border-radius");
		
		#{$root}-label {
			width: map-get($theme, "label-width");
			margin: map-get($theme, "facet-tags-label-margin");
		}
	}
	&-toggle {
		z-index: 0;
		width: 100%;
		&::after { content: ""; }
	}
	
	@include for("tablet") {
		position: static;
		display: block;
		overflow-y: initial;
		padding: map-get($theme, "facet-padding-tablet");
		border: map-get($theme, "facet-border");
		border-radius: map-get($theme, "facet-border-radius");
		&-apply {
			display: none;
		}
		&-fieldset {
			display: inline-block;
			margin-bottom: 0;
		}
		&-label {
			width: map-get($theme, "label-width");
		}
		&-select {
			width: map-get($theme, "select-width");
			overflow-y: hidden;
		}
		&-toggle {
			display: none;
		}
	}
}

/// Theme-map for facets-block
/// @name facets
/// @group settings

$facets: (
	"apply-cancel-background": #555,
	"apply-cancel-color": #fff,
	"apply-filter-background": darken(#4CAF50,15),
	"apply-filter-color": #fff,
	"font": ($poster-type, "light"),
	"facet-background": #eee,
	"facet-border": 1px solid #ccc,
	"facet-border-radius": .5em,
	"facet-padding-tablet": .5em,
	"facet-padding-mobile": .5em .5em 4em .5em,
	"facet-tags-padding": 0 0 0.5em 0.5em,
	"facet-tags-label-margin": 0.5em 0.3em 0 0,
	"font-map": (
		"phone"			: 17px,
		"phablet"		: 16px,
		"tablet"		: 15px,
		"desktop"		: 16px,
		"desktop-large"	: 17px,
		"desktop-xlarge": 18px
	),
	"label-background": #fff,
	"label-background-selected": darken(cornflowerblue,20),
	"label-border": 1px solid #ccc,
	"label-border-radius": .5em,
	"label-border-radius-selected": .5em,
	"label-color": inherit,
	"label-color-selected": #fff,
	"label-content": "",
	"label-content-selected": "",
	"label-padding": 0 1em,
	"label-width": auto,
	"overlay-color": transparent,
	"reset-background": darken(cornflowerblue,20),
	"reset-color": #fff,
	"select-background": #fff,
	"select-border": 1px solid #ccc,
	"select-border-radius": 0 0 .5em .5em,
	"select-box-shadow": 0 0px 40px -15px rgba(0, 0, 0, .75),
	"select-width": 8em,
	"slabel-background-before": linear-gradient(to bottom, #eee, #fff),
	"slabel-background-selected": darken(cornflowerblue,20),
	"slabel-color": #111,
	"slabel-color-selected": #fff,
	"slabel-padding": .25em .5em,	
	"z-index": z("menu")
);

$facet-list: map-merge($facets, (
	"label-border-radius-selected": .5em .5em 0 0,
	"label-content": "\25B8",
	"label-content-selected": "\25BE",
	"label-width": 8em,
	"reset-background": transparent,
	"reset-background-selected": transparent,
	"reset-border": 0,
	"reset-color": #222,
));